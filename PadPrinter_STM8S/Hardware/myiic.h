#ifndef __MYIIC_H
#define __MYIIC_H

//////////////////////////////////////////////////////////////////////////////////	 
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//ALIENTEK战舰STM32开发板
//IIC驱动 代码	   
//正点原子@ALIENTEK
//技术论坛:www.openedv.com
//修改日期:2012/9/9
//版本：V1.0
//版权所有，盗版必究。
//Copyright(C) 广州市星翼电子科技有限公司 2009-2019
//All rights reserved									  
//////////////////////////////////////////////////////////////////////////////////

#if 1

#include "stm8s.h"
//#include "stm8s_gpio.h"

//IO方向设置
#define SDA_IN()  GPIO_Init(GPIOB, GPIO_PIN_5, GPIO_MODE_IN_FL_NO_IT )
#define SDA_OUT() GPIO_Init(GPIOB, GPIO_PIN_5, GPIO_MODE_OUT_OD_HIZ_SLOW )

//#define SDA_IN()     do{GPIOB->DDR|=0xdf;GPIOB->CR1|=0x20;GPIOB->CR2&=0xdf;}while(0)
//#define SDA_OUT()    do{GPIOB->DDR|=0x20;GPIOB->CR1|=0x20;GPIOB->CR2&=0xdf;}while(0)

//SCL-PB4
#define IIC_SCL_H     (GPIOB->ODR |=  (1 << 4))
#define IIC_SCL_L     (GPIOB->ODR &= ~(1 << 4))

//SDA-PB5
#define IIC_SDA_H     (GPIOB->ODR |=  (1 << 5))
#define IIC_SDA_L     (GPIOB->ODR &= ~(1 << 5))
#define READ_SDA      ((GPIOB->IDR &  (1 << 5))>>5)

//IIC所有操作函数
void IIC_Init(void);                //初始化IIC的IO口				 
void IIC_Start(void);				//发送IIC开始信号
void IIC_Stop(void);	  			//发送IIC停止信号
void IIC_Send_Byte(u8 txd);			//IIC发送一个字节
u8 IIC_Read_Byte(unsigned char ack);//IIC读取一个字节
u8 IIC_Wait_Ack(void); 				//IIC等待ACK信号
void IIC_Ack(void);					//IIC发送ACK信号
void IIC_NAck(void);				//IIC不发送ACK信号

void IIC_Write_One_Byte(u8 daddr,u8 addr,u8 data);
u8 IIC_Read_One_Byte(u8 daddr,u8 addr);	

#else

#include "stm8s.h"

//SCL-PB4
#define IIC_SCL_H     (GPIOB->ODR |=  (1 << 4))
#define IIC_SCL_L     (GPIOB->ODR &= ~(1 << 4))

//SDA-PB5
#define IIC_SDA_H     (GPIOB->ODR |=  (1 << 5))
#define IIC_SDA_L     (GPIOB->ODR &= ~(1 << 5))
#define IIC_SDA_R     ((GPIOB->IDR &  (1 << 5))>>5)


//IIC??????
void IIC_Init(void);                //???IIC?IO?                                 
void IIC_Start(void);                                //??IIC????
void IIC_Stop(void);                                  //??IIC????
void IIC_Send_Byte(u8 txd);                        //IIC??????
u8 IIC_Read_Byte(unsigned char ack);//IIC??????
u8 IIC_Wait_Ack(void);                                 //IIC??ACK??
void IIC_Ack(void);                                        //IIC??ACK??
void IIC_NAck(void);                                //IIC???ACK??

void IIC_Write_One_Byte(u8 daddr,u8 addr,u8 data);
u8 IIC_Read_One_Byte(u8 daddr,u8 addr);

#endif

#endif
















